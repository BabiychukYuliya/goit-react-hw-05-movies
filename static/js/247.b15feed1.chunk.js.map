{"version":3,"file":"static/js/247.b15feed1.chunk.js","mappings":"+SAGMA,EAAM,mCAEZC,EAAAA,EAAAA,SAAAA,QAAyB,gCAIlB,IAAMC,EAAiB,mCAAG,oGACRD,EAAAA,EAAAA,IAAA,qCAAwCD,IADhC,cACzBG,EADyB,yBAExBA,EAASC,KAAKC,SAFU,2CAAH,qDAMjBC,EAAc,mCAAG,WAAOC,GAAP,uFACHN,EAAAA,EAAAA,IAAA,+BAAkCD,EAAlC,kBAA+CO,IAD5C,cACpBJ,EADoB,yBAErBA,EAASC,KAAKC,SAFO,2CAAH,sDAMdG,EAAU,mCAAG,WAAMC,GAAN,uFACDR,EAAAA,EAAAA,IAAA,gBAAmBQ,EAAnB,oBAAsCT,IADrC,cAClBG,EADkB,yBAEjBA,EAASC,MAFQ,2CAAH,sDAOVM,EAAO,mCAAG,WAAMD,GAAN,uFACER,EAAAA,EAAAA,IAAA,gBAAmBQ,EAAnB,4BAA8CT,IADhD,cACfG,EADe,yBAEdA,EAASC,KAAKO,MAFA,2CAAH,sDAMPC,EAAU,mCAAG,WAAMH,GAAN,uFACDR,EAAAA,EAAAA,IAAA,gBAAmBQ,EAAnB,4BAA8CT,IAD7C,cAClBG,EADkB,yBAEjBA,EAASC,KAAKC,SAFG,2CAAH,qD,uFCKvB,UAhCa,WACX,OAAkCQ,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACQN,GAAYO,EAAAA,EAAAA,MAAZP,QAOJ,IAJFQ,EAAAA,EAAAA,YAAU,YACNP,EAAAA,EAAAA,IAAQD,GAASS,KAAKH,EACzB,GAAE,CAACN,IAEGK,EAIP,OAAS,+BACP,wBACGA,EAAUK,KAAI,SAAAC,GAAK,OAClB,2BACE,SAAC,KAAD,CACEC,IAAKD,EAAME,aAAN,8CACwCF,EAAME,cAD9C,+EAILC,IAAKH,EAAMI,iBAEb,wBAAKJ,EAAMb,QACX,gCAAQa,EAAMK,eATPL,EAAMM,GADG,OAe3B,C,uLCnCYC,EAAMC,EAAAA,GAAAA,IAAH,wDAKHC,EAAcD,EAAAA,GAAAA,IAAH,iEAKXE,EAAUF,EAAAA,GAAAA,IAAH,qFAMPG,EAAOH,EAAAA,GAAAA,IAAH,yDAIJI,EAAQJ,EAAAA,GAAAA,IAAH,qC","sources":["api.jsx","components/Cast/Cast.jsx","pages/MovieDetails/MovieDetails.styled.jsx"],"sourcesContent":["import axios from \"axios\";\n\n\nconst KEY = '92482f3e0360ce24426b46fb170dce96';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\n\n\nexport const getTrandingMovies = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${KEY}`);\n  return response.data.results;\n};\n\n\nexport const getSearchMovie = async (name) => {\n    const response = await axios.get(`search/movie?api_key=${KEY}&query=${name}`);\n  return response.data.results;\n}\n\n\nexport const getDetails = async movieId => {\n  const response = await axios.get(`movie/${movieId}?api_key=${KEY}`);\n  return response.data;\n};\n\n\n\nexport const getCast = async movieId => {\n  const response = await axios.get(`movie/${movieId}/credits?api_key=${KEY}`);\n  return response.data.cast;\n};\n\n\nexport const getReviews = async movieId => {\n  const response = await axios.get(`movie/${movieId}/reviews?api_key=${KEY}`);\n  return response.data.results;\n};","import { getCast } from \"api\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Actor } from \"pages/MovieDetails/MovieDetails.styled\";\nimport PropTypes from 'prop-types';\n\n\nconst Cast = () => {\n  const [movieCast, setMovieCast] = useState([]);\n  const { movieId } = useParams();\n\n    \n    useEffect(() => { \n        getCast(movieId).then(setMovieCast)\n    }, [movieId]);\n\n      if (!movieCast) {\n    return;\n  }\n\n    return ( <>\n      <ul >\n        {movieCast.map(actor => (\n          <li key={actor.id} >\n            <Actor\n              src={actor.profile_path\n                  ? `https://www.themoviedb.org/t/p/w500/${actor.profile_path}`\n                  : `https://upload.wikimedia.org/wikipedia/commons/6/65/No-Image-Placeholder.svg`\n              }\n              alt={actor.original_name}\n            />\n            <h3>{actor.name}</h3>\n            <p>As: {actor.character}</p>\n          </li>\n        ))}\n      </ul>\n    </>)\n}\n\nexport default Cast;\n\nCast.propTypes = {\n  movieCast: PropTypes.array,\n  movieId:PropTypes.string,\n\n}","import styled from \"styled-components\";\n\nexport const Img = styled.img`\nwidth: 200px;\ndisplay: block;\n`;\n\nexport const Description = styled.div`\ndisplay: flex;\nflex-direction: column;\n`;\n\nexport const Details = styled.div`\ndisplay: flex;\ngap: 20px;\nborder-bottom: 1px solid black;\n`;\n\nexport const Info = styled.div`\nborder-bottom: 1px solid black;\n`;\n\nexport const Actor = styled.img`\nwidth: 80px;\n`;"],"names":["KEY","axios","getTrandingMovies","response","data","results","getSearchMovie","name","getDetails","movieId","getCast","cast","getReviews","useState","movieCast","setMovieCast","useParams","useEffect","then","map","actor","src","profile_path","alt","original_name","character","id","Img","styled","Description","Details","Info","Actor"],"sourceRoot":""}