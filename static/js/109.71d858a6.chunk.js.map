{"version":3,"file":"static/js/109.71d858a6.chunk.js","mappings":"+SAGMA,EAAM,mCAEZC,EAAAA,EAAAA,SAAAA,QAAyB,gCAIlB,IAAMC,EAAiB,mCAAG,oGACRD,EAAAA,EAAAA,IAAA,qCAAwCD,IADhC,cACzBG,EADyB,yBAExBA,EAASC,KAAKC,SAFU,2CAAH,qDAMjBC,EAAc,mCAAG,WAAOC,GAAP,uFACHN,EAAAA,EAAAA,IAAA,+BAAkCD,EAAlC,kBAA+CO,IAD5C,cACpBJ,EADoB,yBAErBA,EAASC,KAAKC,SAFO,2CAAH,sDAMdG,EAAU,mCAAG,WAAMC,GAAN,uFACDR,EAAAA,EAAAA,IAAA,gBAAmBQ,EAAnB,oBAAsCT,IADrC,cAClBG,EADkB,yBAEjBA,EAASC,MAFQ,2CAAH,sDAOVM,EAAO,mCAAG,WAAMD,GAAN,uFACER,EAAAA,EAAAA,IAAA,gBAAmBQ,EAAnB,4BAA8CT,IADhD,cACfG,EADe,yBAEdA,EAASC,KAAKO,MAFA,2CAAH,sDAMPC,EAAU,mCAAG,WAAMH,GAAN,uFACDR,EAAAA,EAAAA,IAAA,gBAAmBQ,EAAnB,4BAA8CT,IAD7C,cAClBG,EADkB,yBAEjBA,EAASC,KAAKC,SAFG,2CAAH,qD,yJC9BjBQ,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,iPAeHE,EAAW,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,GAAIC,EAAe,EAAfA,SAC7B,OACE,UAACL,EAAD,CAAYI,GAAIA,EAAhB,WACE,SAAC,MAAD,CAAaE,KAAK,OACjBD,IAGN,E,SCoCD,EAtDqB,WAAO,IAAD,IACzB,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACQb,GAAYc,EAAAA,EAAAA,MAAZd,QAEFe,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAM7C,IAJAC,EAAAA,EAAAA,YAAU,YACRpB,EAAAA,EAAAA,IAAWC,GAASoB,KAAKP,EAC1B,GAAE,CAACb,IAECY,EAIL,OACE,iCACE,SAACL,EAAD,CAAUC,GAAIO,EAAd,sBACA,UAAC,KAAD,YACE,SAAC,KAAD,CACEM,IAAG,8CAAyCT,EAAMU,aAClDC,IAAG,UAAKX,EAAMY,UAGhB,UAAC,KAAD,YACE,0BACGZ,EAAMY,MADT,KACkBZ,EAAMa,aAAaC,MAAM,EAAG,GAD9C,QAGA,wCAAgBC,KAAKC,MAA2B,GAArBhB,EAAMiB,cAAjC,QACA,sCACA,uBAAIjB,EAAMkB,YACV,oCACA,uBAAIlB,EAAMmB,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMnC,IAAV,IAAgBoC,KAAK,gBAKnD,UAAC,KAAD,YACE,oDACA,2BACE,yBACE,SAAC,KAAD,CAAM1B,GAAI,OAAV,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAI,UAAV,2BAGJ,SAAC,EAAA2B,SAAD,CAAUC,UAAU,gDAApB,UACE,SAAC,KAAD,WAKT,C,uLC1DYC,EAAMhC,EAAAA,GAAAA,IAAH,wDAKHiC,EAAcjC,EAAAA,GAAAA,IAAH,iEAKXkC,EAAUlC,EAAAA,GAAAA,IAAH,qFAMPmC,EAAOnC,EAAAA,GAAAA,IAAH,yDAIJoC,EAAQpC,EAAAA,GAAAA,IAAH,qC","sources":["api.jsx","components/BackLink.jsx","pages/MovieDetails/MovieDetails.jsx","pages/MovieDetails/MovieDetails.styled.jsx"],"sourcesContent":["import axios from \"axios\";\n\n\nconst KEY = '92482f3e0360ce24426b46fb170dce96';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\n\n\nexport const getTrandingMovies = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${KEY}`);\n  return response.data.results;\n};\n\n\nexport const getSearchMovie = async (name) => {\n    const response = await axios.get(`search/movie?api_key=${KEY}&query=${name}`);\n  return response.data.results;\n}\n\n\nexport const getDetails = async movieId => {\n  const response = await axios.get(`movie/${movieId}?api_key=${KEY}`);\n  return response.data;\n};\n\n\n\nexport const getCast = async movieId => {\n  const response = await axios.get(`movie/${movieId}/credits?api_key=${KEY}`);\n  return response.data.cast;\n};\n\n\nexport const getReviews = async movieId => {\n  const response = await axios.get(`movie/${movieId}/reviews?api_key=${KEY}`);\n  return response.data.results;\n};","import { HiArrowLeft } from \"react-icons/hi\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n\n  :hover {\n    color: orangered;\n  }\n`;\n\nexport const BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <HiArrowLeft size=\"24\" />\n      {children}\n    </StyledLink>\n  );\n};\n","import { Suspense } from 'react';\nimport { useParams, useLocation, Link, Outlet } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getDetails } from 'api';\nimport { BackLink } from 'components/BackLink';\nimport { Img, Description, Details, Info } from './MovieDetails.styled';\nimport PropTypes from 'prop-types';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    getDetails(movieId).then(setMovie);\n  }, [movieId]);\n\n  if (!movie) {\n    return;\n  }\n\n  return (\n    <>\n      <BackLink to={backLinkHref}>Go back</BackLink>\n      <Details>\n        <Img\n          src={`https://www.themoviedb.org/t/p/w500/${movie.poster_path}`}\n          alt={`${movie.title}`}\n        />\n\n        <Description>\n          <h2>\n            {movie.title} ({movie.release_date.slice(0, 4)})\n          </h2>\n          <p>User score: {Math.floor(movie.vote_average * 10)}%</p>\n          <h3>Overview</h3>\n          <p>{movie.overview}</p>\n          <h3>Genres</h3>\n          <p>{movie.genres.map(genre => genre.name).join(' / ')}</p>\n        </Description>\n      </Details>\n\n\n      <Info>\n        <h2>Additional information</h2>\n        <ul>\n          <li>\n            <Link to={'cast'}>Cast</Link>\n          </li>\n          <li>\n            <Link to={'reviews'}>Reviews</Link>\n          </li>\n        </ul>\n        <Suspense fallback={<div>Loading subpage...</div>}>\n          <Outlet />\n        </Suspense>\n      </Info>\n    </>\n  );\n};\n\nexport default MovieDetails;\n\nMovieDetails.propTypes = {\n  location: PropTypes.string,\n  backLinkHref: PropTypes.string,\n}","import styled from \"styled-components\";\n\nexport const Img = styled.img`\nwidth: 200px;\ndisplay: block;\n`;\n\nexport const Description = styled.div`\ndisplay: flex;\nflex-direction: column;\n`;\n\nexport const Details = styled.div`\ndisplay: flex;\ngap: 20px;\nborder-bottom: 1px solid black;\n`;\n\nexport const Info = styled.div`\nborder-bottom: 1px solid black;\n`;\n\nexport const Actor = styled.img`\nwidth: 80px;\n`;"],"names":["KEY","axios","getTrandingMovies","response","data","results","getSearchMovie","name","getDetails","movieId","getCast","cast","getReviews","StyledLink","styled","Link","BackLink","to","children","size","useState","movie","setMovie","useParams","backLinkHref","useLocation","state","from","useEffect","then","src","poster_path","alt","title","release_date","slice","Math","floor","vote_average","overview","genres","map","genre","join","Suspense","fallback","Img","Description","Details","Info","Actor"],"sourceRoot":""}