{"version":3,"file":"static/js/500.9d6f6eff.chunk.js","mappings":"+SAGMA,EAAM,mCAEZC,EAAAA,EAAAA,SAAAA,QAAyB,gCAIlB,IAAMC,EAAiB,mCAAG,oGACRD,EAAAA,EAAAA,IAAA,qCAAwCD,IADhC,cACzBG,EADyB,yBAExBA,EAASC,KAAKC,SAFU,2CAAH,qDAMjBC,EAAc,mCAAG,WAAOC,GAAP,uFACHN,EAAAA,EAAAA,IAAA,+BAAkCD,EAAlC,kBAA+CO,IAD5C,cACpBJ,EADoB,yBAErBA,EAASC,KAAKC,SAFO,2CAAH,sDAMdG,EAAU,mCAAG,WAAMC,GAAN,uFACDR,EAAAA,EAAAA,IAAA,gBAAmBQ,EAAnB,oBAAsCT,IADrC,cAClBG,EADkB,yBAEjBA,EAASC,MAFQ,2CAAH,sDAOVM,EAAO,mCAAG,WAAMD,GAAN,uFACER,EAAAA,EAAAA,IAAA,gBAAmBQ,EAAnB,4BAA8CT,IADhD,cACfG,EADe,yBAEdA,EAASC,KAAKO,MAFA,2CAAH,sDAMPC,EAAU,mCAAG,WAAMH,GAAN,uFACDR,EAAAA,EAAAA,IAAA,gBAAmBQ,EAAnB,4BAA8CT,IAD7C,cAClBG,EADkB,yBAEjBA,EAASC,KAAKC,SAFG,2CAAH,qD,mGChCVQ,EAAOC,EAAAA,GAAAA,GAAH,gD,GAIUA,EAAAA,GAAAA,IAAH,kEAMCA,EAAAA,GAAAA,GAAH,mG,QCTTC,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,yBACGF,EAAOG,KAAI,SAACC,GAAD,OACV,SAACP,EAAD,WACE,SAAC,KAAD,CAAMQ,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMP,GAAhD,UACE,uBAAIG,EAAMK,WAFHL,EAAME,GADP,KASjB,C,kGCfYI,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC1B,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOrB,EAAP,KAAasB,EAAb,KAkBA,OACE,mBAAQC,UAAU,YAAlB,UACE,kBAAMC,SAdW,SAAAC,GACnBA,EAAMC,iBAEc,KAAhB1B,EAAK2B,QAKTP,EAASpB,GACTsB,EAAQ,KALNM,MAAM,4BAMT,EAIiCL,UAAU,aAAxC,WACE,kBACEA,UAAU,mBACVM,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,gBACZC,SAzBgB,SAAAC,GACtBZ,EAAQY,EAAIC,cAAcC,MAAMC,cACjC,EAwBOD,MAAOpC,KAET,mBAAQ6B,KAAK,SAASN,UAAU,oBAAhC,UACE,iBAAMA,UAAU,0BAAhB,0BAKT,E,0BCLD,EA1Be,WACX,OAAwCe,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA4BnB,EAAAA,EAAAA,UAAS,IAArC,eAAOZ,EAAP,KAAegC,EAAf,KACMzC,EAAOuC,EAAaG,IAAI,SAG9BC,EAAAA,EAAAA,YAAU,WACD3C,IAELD,EAAAA,EAAAA,IAAeC,GAAM4C,KAAKH,EAE7B,GAAE,CAACzC,IAQJ,OAAQ,iCACJ,SAACmB,EAAD,CAAWC,SANI,SAACpB,GAEpBwC,EAD4B,KAATxC,EAAc,CAAEA,KAAAA,GAAS,CAAC,EAE9C,KAIK,SAACQ,EAAA,EAAD,CAAYC,OAAQA,MAG3B,C","sources":["api.jsx","components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","components/SearchBar/SearchBar.jsx","pages/Movies.jsx"],"sourcesContent":["import axios from \"axios\";\n\n\nconst KEY = '92482f3e0360ce24426b46fb170dce96';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\n\n\nexport const getTrandingMovies = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${KEY}`);\n  return response.data.results;\n};\n\n\nexport const getSearchMovie = async (name) => {\n    const response = await axios.get(`search/movie?api_key=${KEY}&query=${name}`);\n  return response.data.results;\n}\n\n\nexport const getDetails = async movieId => {\n  const response = await axios.get(`movie/${movieId}?api_key=${KEY}`);\n  return response.data;\n};\n\n\n\nexport const getCast = async movieId => {\n  const response = await axios.get(`movie/${movieId}/credits?api_key=${KEY}`);\n  return response.data.cast;\n};\n\n\nexport const getReviews = async movieId => {\n  const response = await axios.get(`movie/${movieId}/reviews?api_key=${KEY}`);\n  return response.data.results;\n};","import styled from \"styled-components\";\n\nexport const List = styled.li`\nlist-style-type: none;\n`;\n\nexport const CardWrapper = styled.div`\n  > a {\n    text-decoration: none;\n  }\n`;\n\nexport const MovieName = styled.h3`\n  padding: 4px;\n  margin-top: 8px;\n  margin-bottom: 0;\n  color: black;\n`;\n","import { Link, useLocation } from \"react-router-dom\";\nimport { List } from \"./MoviesList.styled\";\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <div>\n      {movies.map((movie) => (\n        <List key={movie.id}>\n          <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n            <p>{movie.title}</p>\n          </Link>\n        </List>\n      ))}\n    </div>\n  );\n};\n","import { useState } from 'react';\n\nexport const Searchbar = ({ onSearch }) => {\n  const [name, setName] = useState('');\n\n  const handleNameCange = evn => {\n    setName(evn.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (name.trim() === '') {\n      alert('Input your request pleace');\n      return;\n    }\n\n    onSearch(name);\n    setName('');\n  };\n\n  return (\n    <header className=\"Searchbar\">\n      <form onSubmit={handleSubmit} className=\"SearchForm\">\n        <input\n          className=\"SearchForm-input\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies\"\n          onChange={handleNameCange}\n          value={name}\n        />\n        <button type=\"submit\" className=\"SearchForm-button\">\n          <span className=\"SearchForm-button-label\">Search</span>\n        </button>\n      </form>\n    </header>\n  );\n};\n","\nimport { Searchbar } from 'components/SearchBar/SearchBar';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { useSearchParams } from \"react-router-dom\";\nimport { useEffect, useState } from 'react';\nimport { getSearchMovie } from 'api';\nimport PropTypes from 'prop-types';\n\nconst Movies = () => {\n    const [searchParams, setSearchParams] = useSearchParams();\n    const [movies, setMovies] = useState([]);\n    const name = searchParams.get(\"name\");\n\n\n    useEffect(() => {\n        if (!name) return;\n\n        getSearchMovie(name).then(setMovies);\n\n    }, [name]);\n\n\n  const handleSubmit = (name) => {\n    const nextParams = name !== \"\" ? { name } : {};\n    setSearchParams(nextParams);\n  };\n\n    return (<>\n        <Searchbar onSearch={handleSubmit} />\n        <MoviesList movies={movies} />\n    </>)\n    \n};\n\nexport default Movies;\n\nMovies.propTypes = {\n  name: PropTypes.string,\n}"],"names":["KEY","axios","getTrandingMovies","response","data","results","getSearchMovie","name","getDetails","movieId","getCast","cast","getReviews","List","styled","MoviesList","movies","location","useLocation","map","movie","to","id","state","from","title","Searchbar","onSearch","useState","setName","className","onSubmit","event","preventDefault","trim","alert","type","autoComplete","autoFocus","placeholder","onChange","evn","currentTarget","value","toLowerCase","useSearchParams","searchParams","setSearchParams","setMovies","get","useEffect","then"],"sourceRoot":""}