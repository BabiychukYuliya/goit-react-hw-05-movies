{"version":3,"file":"static/js/186.7c06bb6f.chunk.js","mappings":"+SAGMA,EAAM,mCAEZC,EAAAA,EAAAA,SAAAA,QAAyB,gCAIlB,IAAMC,EAAiB,mCAAG,oGACRD,EAAAA,EAAAA,IAAA,qCAAwCD,IADhC,cACzBG,EADyB,yBAExBA,EAASC,KAAKC,SAFU,2CAAH,qDAMjBC,EAAc,mCAAG,WAAOC,GAAP,uFACHN,EAAAA,EAAAA,IAAA,+BAAkCD,EAAlC,kBAA+CO,IAD5C,cACpBJ,EADoB,yBAErBA,EAASC,KAAKC,SAFO,2CAAH,sDAMdG,EAAU,mCAAG,WAAMC,GAAN,uFACDR,EAAAA,EAAAA,IAAA,gBAAmBQ,EAAnB,oBAAsCT,IADrC,cAClBG,EADkB,yBAEjBA,EAASC,MAFQ,2CAAH,sDAOVM,EAAO,mCAAG,WAAMD,GAAN,uFACER,EAAAA,EAAAA,IAAA,gBAAmBQ,EAAnB,4BAA8CT,IADhD,cACfG,EADe,yBAEdA,EAASC,KAAKO,MAFA,2CAAH,sDAMPC,EAAU,mCAAG,WAAMH,GAAN,uFACDR,EAAAA,EAAAA,IAAA,gBAAmBQ,EAAnB,4BAA8CT,IAD7C,cAClBG,EADkB,yBAEjBA,EAASC,KAAKC,SAFG,2CAAH,qD,8ECCvB,UA9BgB,WACd,OAAwCQ,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACQN,GAAYO,EAAAA,EAAAA,MAAZP,QAMR,IAJAQ,EAAAA,EAAAA,YAAU,YACRL,EAAAA,EAAAA,IAAWH,GAASS,KAAKH,EAC1B,GAAE,CAACN,IAECK,EAIL,OACE,yBACGA,EAAaK,OAAS,GACrB,wBACGL,EAAaM,KAAI,SAAAC,GAAM,OACtB,2BACE,qCAAaA,EAAOC,WACpB,uBAAID,EAAOE,YAFJF,EAAOG,GADM,MAQ1B,8CAIP,C","sources":["api.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from \"axios\";\n\n\nconst KEY = '92482f3e0360ce24426b46fb170dce96';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\n\n\nexport const getTrandingMovies = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${KEY}`);\n  return response.data.results;\n};\n\n\nexport const getSearchMovie = async (name) => {\n    const response = await axios.get(`search/movie?api_key=${KEY}&query=${name}`);\n  return response.data.results;\n}\n\n\nexport const getDetails = async movieId => {\n  const response = await axios.get(`movie/${movieId}?api_key=${KEY}`);\n  return response.data;\n};\n\n\n\nexport const getCast = async movieId => {\n  const response = await axios.get(`movie/${movieId}/credits?api_key=${KEY}`);\n  return response.data.cast;\n};\n\n\nexport const getReviews = async movieId => {\n  const response = await axios.get(`movie/${movieId}/reviews?api_key=${KEY}`);\n  return response.data.results;\n};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReviews } from \"api\";\nimport PropTypes from 'prop-types';\n\nconst Reviews = () => {\n  const [movieReviews, setMovieReviews] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getReviews(movieId).then(setMovieReviews);\n  }, [movieId]);\n\n  if (!movieReviews) {\n    return;\n  }\n\n  return (\n    <div>\n      {movieReviews.length > 0 ? (\n        <ul>\n          {movieReviews.map(review => (\n            <li key={review.id}>\n              <h3>Author: {review.author}</h3>\n              <p>{review.content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        'We do not have any reviews for this movie.'\n      )}\n    </div>\n  );\n};\n\nexport default Reviews;\n\nReviews.propTypes = {\n  movieReviews: PropTypes.array,\n  movieId:PropTypes.string,\n}"],"names":["KEY","axios","getTrandingMovies","response","data","results","getSearchMovie","name","getDetails","movieId","getCast","cast","getReviews","useState","movieReviews","setMovieReviews","useParams","useEffect","then","length","map","review","author","content","id"],"sourceRoot":""}